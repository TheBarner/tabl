# Generated from C:/Users/barna/PycharmProjects/tabl\Tabl.g4 by ANTLR 4.10.1
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,36,403,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,
        2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,
        13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,
        19,2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,
        26,7,26,2,27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,
        32,2,33,7,33,2,34,7,34,2,35,7,35,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,
        1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,3,0,90,8,0,1,1,1,1,1,1,1,1,1,1,3,
        1,97,8,1,1,2,1,2,1,3,1,3,1,4,1,4,1,5,1,5,1,6,1,6,1,7,1,7,1,8,1,8,
        1,8,3,8,114,8,8,1,9,1,9,1,10,1,10,1,11,1,11,1,12,1,12,1,13,1,13,
        1,14,1,14,1,15,1,15,1,15,1,15,1,15,1,15,1,16,1,16,1,16,1,17,1,17,
        1,17,1,17,1,17,1,17,1,17,1,17,1,17,1,17,1,17,1,17,1,17,1,17,1,17,
        1,17,1,17,1,17,1,17,1,18,1,18,1,18,1,18,1,18,1,18,1,18,1,18,1,18,
        1,18,1,18,1,18,1,18,1,18,1,18,1,18,1,18,1,19,1,19,1,19,1,20,1,20,
        1,20,1,20,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,3,21,188,8,21,
        1,22,1,22,1,22,1,22,1,22,1,22,1,22,1,22,1,22,1,22,1,22,1,22,1,22,
        1,22,1,22,1,22,1,22,1,22,3,22,208,8,22,1,23,1,23,1,23,1,23,1,23,
        1,23,1,23,1,23,1,23,1,23,1,23,1,23,1,23,1,23,1,23,1,23,1,23,1,23,
        1,23,1,23,1,23,1,23,1,23,1,23,1,23,1,23,1,23,1,23,1,23,3,23,239,
        8,23,1,24,1,24,1,24,1,24,1,24,1,24,1,24,1,24,1,24,1,24,1,24,1,24,
        1,24,1,24,1,24,1,24,1,24,1,25,1,25,1,25,1,25,1,25,1,25,1,25,1,25,
        1,25,1,25,1,26,1,26,1,26,1,26,1,26,1,26,1,26,1,26,1,26,1,26,1,27,
        1,27,1,27,1,27,1,27,1,27,1,27,1,27,1,27,1,27,1,27,1,27,1,27,1,27,
        1,27,1,27,1,27,1,27,1,27,1,28,1,28,1,28,1,28,1,28,1,28,1,28,1,28,
        1,28,1,28,1,28,1,28,1,28,1,28,1,28,1,28,1,28,1,28,1,28,1,28,1,28,
        1,28,1,28,1,28,1,28,1,28,1,28,1,28,1,28,1,28,1,28,1,28,1,28,1,28,
        1,28,1,28,1,28,1,28,1,28,1,28,1,28,1,28,1,28,1,28,1,28,1,28,3,28,
        343,8,28,1,29,1,29,1,29,1,29,1,29,1,29,1,29,1,29,1,29,3,29,354,8,
        29,1,30,1,30,1,30,1,30,1,30,1,30,1,30,1,30,1,30,1,30,1,30,1,30,1,
        30,1,30,1,31,1,31,1,31,1,31,1,31,1,31,1,32,1,32,1,32,1,32,1,32,1,
        32,3,32,382,8,32,1,33,4,33,385,8,33,11,33,12,33,386,1,34,1,34,1,
        34,5,34,392,8,34,10,34,12,34,395,9,34,1,34,1,34,1,35,4,35,400,8,
        35,11,35,12,35,401,0,0,36,1,1,3,2,5,3,7,4,9,5,11,6,13,7,15,8,17,
        9,19,10,21,11,23,12,25,13,27,14,29,15,31,16,33,17,35,18,37,19,39,
        20,41,21,43,22,45,23,47,24,49,25,51,26,53,27,55,28,57,29,59,30,61,
        31,63,32,65,33,67,34,69,35,71,36,1,0,6,2,0,10,10,13,13,3,0,42,43,
        45,45,47,47,2,0,44,44,46,46,1,0,48,57,2,0,65,90,97,122,4,0,32,32,
        45,45,65,90,97,122,422,0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,
        0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,
        0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,1,0,0,0,0,25,1,0,0,0,0,27,1,
        0,0,0,0,29,1,0,0,0,0,31,1,0,0,0,0,33,1,0,0,0,0,35,1,0,0,0,0,37,1,
        0,0,0,0,39,1,0,0,0,0,41,1,0,0,0,0,43,1,0,0,0,0,45,1,0,0,0,0,47,1,
        0,0,0,0,49,1,0,0,0,0,51,1,0,0,0,0,53,1,0,0,0,0,55,1,0,0,0,0,57,1,
        0,0,0,0,59,1,0,0,0,0,61,1,0,0,0,0,63,1,0,0,0,0,65,1,0,0,0,0,67,1,
        0,0,0,0,69,1,0,0,0,0,71,1,0,0,0,1,89,1,0,0,0,3,96,1,0,0,0,5,98,1,
        0,0,0,7,100,1,0,0,0,9,102,1,0,0,0,11,104,1,0,0,0,13,106,1,0,0,0,
        15,108,1,0,0,0,17,113,1,0,0,0,19,115,1,0,0,0,21,117,1,0,0,0,23,119,
        1,0,0,0,25,121,1,0,0,0,27,123,1,0,0,0,29,125,1,0,0,0,31,127,1,0,
        0,0,33,133,1,0,0,0,35,136,1,0,0,0,37,155,1,0,0,0,39,172,1,0,0,0,
        41,175,1,0,0,0,43,187,1,0,0,0,45,207,1,0,0,0,47,238,1,0,0,0,49,240,
        1,0,0,0,51,257,1,0,0,0,53,267,1,0,0,0,55,277,1,0,0,0,57,342,1,0,
        0,0,59,353,1,0,0,0,61,355,1,0,0,0,63,369,1,0,0,0,65,381,1,0,0,0,
        67,384,1,0,0,0,69,388,1,0,0,0,71,399,1,0,0,0,73,74,5,67,0,0,74,75,
        5,111,0,0,75,76,5,110,0,0,76,77,5,116,0,0,77,78,5,101,0,0,78,79,
        5,110,0,0,79,80,5,116,0,0,80,90,5,115,0,0,81,82,5,99,0,0,82,83,5,
        111,0,0,83,84,5,110,0,0,84,85,5,116,0,0,85,86,5,101,0,0,86,87,5,
        110,0,0,87,88,5,116,0,0,88,90,5,115,0,0,89,73,1,0,0,0,89,81,1,0,
        0,0,90,2,1,0,0,0,91,97,5,9,0,0,92,93,5,32,0,0,93,94,5,32,0,0,94,
        95,5,32,0,0,95,97,5,32,0,0,96,91,1,0,0,0,96,92,1,0,0,0,97,4,1,0,
        0,0,98,99,5,44,0,0,99,6,1,0,0,0,100,101,5,40,0,0,101,8,1,0,0,0,102,
        103,5,41,0,0,103,10,1,0,0,0,104,105,5,58,0,0,105,12,1,0,0,0,106,
        107,5,126,0,0,107,14,1,0,0,0,108,109,5,35,0,0,109,16,1,0,0,0,110,
        114,7,0,0,0,111,112,5,13,0,0,112,114,5,10,0,0,113,110,1,0,0,0,113,
        111,1,0,0,0,114,18,1,0,0,0,115,116,5,120,0,0,116,20,1,0,0,0,117,
        118,7,1,0,0,118,22,1,0,0,0,119,120,5,46,0,0,120,24,1,0,0,0,121,122,
        5,32,0,0,122,26,1,0,0,0,123,124,7,2,0,0,124,28,1,0,0,0,125,126,5,
        39,0,0,126,30,1,0,0,0,127,128,5,112,0,0,128,129,5,104,0,0,129,130,
        5,97,0,0,130,131,5,115,0,0,131,132,5,101,0,0,132,32,1,0,0,0,133,
        134,5,116,0,0,134,135,5,111,0,0,135,34,1,0,0,0,136,137,5,84,0,0,
        137,138,5,104,0,0,138,139,5,101,0,0,139,140,5,32,0,0,140,141,5,103,
        0,0,141,142,5,97,0,0,142,143,5,109,0,0,143,144,5,101,0,0,144,145,
        5,32,0,0,145,146,5,101,0,0,146,147,5,110,0,0,147,148,5,100,0,0,148,
        149,5,115,0,0,149,150,5,32,0,0,150,151,5,119,0,0,151,152,5,104,0,
        0,152,153,5,101,0,0,153,154,5,110,0,0,154,36,1,0,0,0,155,156,5,97,
        0,0,156,157,5,32,0,0,157,158,5,112,0,0,158,159,5,108,0,0,159,160,
        5,97,0,0,160,161,5,121,0,0,161,162,5,101,0,0,162,163,5,114,0,0,163,
        164,5,32,0,0,164,165,5,114,0,0,165,166,5,101,0,0,166,167,5,97,0,
        0,167,168,5,99,0,0,168,169,5,104,0,0,169,170,5,101,0,0,170,171,5,
        115,0,0,171,38,1,0,0,0,172,173,5,111,0,0,173,174,5,114,0,0,174,40,
        1,0,0,0,175,176,5,97,0,0,176,177,5,110,0,0,177,178,5,100,0,0,178,
        42,1,0,0,0,179,180,5,108,0,0,180,181,5,101,0,0,181,182,5,115,0,0,
        182,188,5,115,0,0,183,184,5,109,0,0,184,185,5,111,0,0,185,186,5,
        114,0,0,186,188,5,101,0,0,187,179,1,0,0,0,187,183,1,0,0,0,188,44,
        1,0,0,0,189,190,5,73,0,0,190,191,5,110,0,0,191,192,5,32,0,0,192,
        193,5,97,0,0,193,194,5,32,0,0,194,195,5,116,0,0,195,196,5,117,0,
        0,196,197,5,114,0,0,197,208,5,110,0,0,198,199,5,105,0,0,199,200,
        5,110,0,0,200,201,5,32,0,0,201,202,5,97,0,0,202,203,5,32,0,0,203,
        204,5,116,0,0,204,205,5,117,0,0,205,206,5,114,0,0,206,208,5,110,
        0,0,207,189,1,0,0,0,207,198,1,0,0,0,208,46,1,0,0,0,209,210,5,114,
        0,0,210,211,5,101,0,0,211,212,5,115,0,0,212,213,5,111,0,0,213,214,
        5,117,0,0,214,215,5,114,0,0,215,216,5,99,0,0,216,217,5,101,0,0,217,
        218,5,32,0,0,218,219,5,116,0,0,219,220,5,111,0,0,220,221,5,107,0,
        0,221,222,5,101,0,0,222,239,5,110,0,0,223,224,5,114,0,0,224,225,
        5,101,0,0,225,226,5,115,0,0,226,227,5,111,0,0,227,228,5,117,0,0,
        228,229,5,114,0,0,229,230,5,99,0,0,230,231,5,101,0,0,231,232,5,32,
        0,0,232,233,5,116,0,0,233,234,5,111,0,0,234,235,5,107,0,0,235,236,
        5,101,0,0,236,237,5,110,0,0,237,239,5,115,0,0,238,209,1,0,0,0,238,
        223,1,0,0,0,239,48,1,0,0,0,240,241,5,97,0,0,241,242,5,32,0,0,242,
        243,5,99,0,0,243,244,5,111,0,0,244,245,5,109,0,0,245,246,5,109,0,
        0,246,247,5,111,0,0,247,248,5,110,0,0,248,249,5,32,0,0,249,250,5,
        100,0,0,250,251,5,101,0,0,251,252,5,99,0,0,252,253,5,107,0,0,253,
        254,5,32,0,0,254,255,5,111,0,0,255,256,5,102,0,0,256,50,1,0,0,0,
        257,258,5,117,0,0,258,259,5,110,0,0,259,260,5,108,0,0,260,261,5,
        105,0,0,261,262,5,109,0,0,262,263,5,105,0,0,263,264,5,116,0,0,264,
        265,5,101,0,0,265,266,5,100,0,0,266,52,1,0,0,0,267,268,5,97,0,0,
        268,269,5,32,0,0,269,270,5,100,0,0,270,271,5,101,0,0,271,272,5,99,
        0,0,272,273,5,107,0,0,273,274,5,32,0,0,274,275,5,111,0,0,275,276,
        5,102,0,0,276,54,1,0,0,0,277,278,5,80,0,0,278,279,5,108,0,0,279,
        280,5,97,0,0,280,281,5,121,0,0,281,282,5,101,0,0,282,283,5,114,0,
        0,283,284,5,115,0,0,284,285,5,32,0,0,285,286,5,115,0,0,286,287,5,
        116,0,0,287,288,5,97,0,0,288,289,5,114,0,0,289,290,5,116,0,0,290,
        291,5,32,0,0,291,292,5,119,0,0,292,293,5,105,0,0,293,294,5,116,0,
        0,294,295,5,104,0,0,295,56,1,0,0,0,296,297,5,68,0,0,297,298,5,114,
        0,0,298,299,5,97,0,0,299,343,5,119,0,0,300,301,5,100,0,0,301,302,
        5,114,0,0,302,303,5,97,0,0,303,343,5,119,0,0,304,305,5,112,0,0,305,
        306,5,108,0,0,306,307,5,97,0,0,307,343,5,121,0,0,308,309,5,80,0,
        0,309,310,5,108,0,0,310,311,5,97,0,0,311,343,5,121,0,0,312,313,5,
        100,0,0,313,314,5,105,0,0,314,315,5,115,0,0,315,316,5,99,0,0,316,
        317,5,97,0,0,317,318,5,114,0,0,318,343,5,100,0,0,319,320,5,68,0,
        0,320,321,5,105,0,0,321,322,5,115,0,0,322,323,5,99,0,0,323,324,5,
        97,0,0,324,325,5,114,0,0,325,343,5,100,0,0,326,327,5,98,0,0,327,
        328,5,117,0,0,328,343,5,121,0,0,329,330,5,66,0,0,330,331,5,117,0,
        0,331,343,5,121,0,0,332,333,5,115,0,0,333,334,5,99,0,0,334,335,5,
        114,0,0,335,336,5,97,0,0,336,343,5,112,0,0,337,338,5,83,0,0,338,
        339,5,99,0,0,339,340,5,114,0,0,340,341,5,97,0,0,341,343,5,112,0,
        0,342,296,1,0,0,0,342,300,1,0,0,0,342,304,1,0,0,0,342,308,1,0,0,
        0,342,312,1,0,0,0,342,319,1,0,0,0,342,326,1,0,0,0,342,329,1,0,0,
        0,342,332,1,0,0,0,342,337,1,0,0,0,343,58,1,0,0,0,344,345,5,99,0,
        0,345,346,5,97,0,0,346,347,5,114,0,0,347,348,5,100,0,0,348,354,5,
        115,0,0,349,350,5,99,0,0,350,351,5,97,0,0,351,352,5,114,0,0,352,
        354,5,100,0,0,353,344,1,0,0,0,353,349,1,0,0,0,354,60,1,0,0,0,355,
        356,5,76,0,0,356,357,5,105,0,0,357,358,5,115,0,0,358,359,5,116,0,
        0,359,360,5,32,0,0,360,361,5,111,0,0,361,362,5,102,0,0,362,363,5,
        32,0,0,363,364,5,99,0,0,364,365,5,97,0,0,365,366,5,114,0,0,366,367,
        5,100,0,0,367,368,5,115,0,0,368,62,1,0,0,0,369,370,5,101,0,0,370,
        371,5,110,0,0,371,372,5,101,0,0,372,373,5,109,0,0,373,374,5,121,
        0,0,374,64,1,0,0,0,375,376,5,97,0,0,376,377,5,110,0,0,377,382,5,
        121,0,0,378,379,5,97,0,0,379,380,5,108,0,0,380,382,5,108,0,0,381,
        375,1,0,0,0,381,378,1,0,0,0,382,66,1,0,0,0,383,385,7,3,0,0,384,383,
        1,0,0,0,385,386,1,0,0,0,386,384,1,0,0,0,386,387,1,0,0,0,387,68,1,
        0,0,0,388,389,5,39,0,0,389,393,7,4,0,0,390,392,7,5,0,0,391,390,1,
        0,0,0,392,395,1,0,0,0,393,391,1,0,0,0,393,394,1,0,0,0,394,396,1,
        0,0,0,395,393,1,0,0,0,396,397,5,39,0,0,397,70,1,0,0,0,398,400,7,
        4,0,0,399,398,1,0,0,0,400,401,1,0,0,0,401,399,1,0,0,0,401,402,1,
        0,0,0,402,72,1,0,0,0,13,0,89,96,113,187,207,238,342,353,381,386,
        393,401,0
    ]

class TablLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    CONTENTS = 1
    TAB = 2
    COMMA = 3
    PAR_OPEN = 4
    PAR_CLOSE = 5
    COLON = 6
    WAVY = 7
    HASH = 8
    LB = 9
    X = 10
    ARITH = 11
    PERIOD = 12
    SPACE = 13
    DELIM = 14
    APOSTROPHE = 15
    PHASE = 16
    TO = 17
    GAMEENDSWHEN = 18
    APLAYERREACHES = 19
    OR = 20
    AND = 21
    MOREORLESS = 22
    INATURN = 23
    RESOURCETOKENS = 24
    COMMONDECKOF = 25
    UNLIMITED = 26
    DECKOF = 27
    PLAYERSSTARTWIHT = 28
    ACTIONNAME = 29
    RESOURCEORCARDS = 30
    LISTOFCARDS = 31
    TARGET = 32
    ANYALL = 33
    NUMBER = 34
    NAME = 35
    ID = 36

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "','", "'('", "')'", "':'", "'~'", "'#'", "'x'", "'.'", "' '", 
            "'''", "'phase'", "'to'", "'The game ends when'", "'a player reaches'", 
            "'or'", "'and'", "'a common deck of'", "'unlimited'", "'a deck of'", 
            "'Players start with'", "'List of cards'", "'enemy'" ]

    symbolicNames = [ "<INVALID>",
            "CONTENTS", "TAB", "COMMA", "PAR_OPEN", "PAR_CLOSE", "COLON", 
            "WAVY", "HASH", "LB", "X", "ARITH", "PERIOD", "SPACE", "DELIM", 
            "APOSTROPHE", "PHASE", "TO", "GAMEENDSWHEN", "APLAYERREACHES", 
            "OR", "AND", "MOREORLESS", "INATURN", "RESOURCETOKENS", "COMMONDECKOF", 
            "UNLIMITED", "DECKOF", "PLAYERSSTARTWIHT", "ACTIONNAME", "RESOURCEORCARDS", 
            "LISTOFCARDS", "TARGET", "ANYALL", "NUMBER", "NAME", "ID" ]

    ruleNames = [ "CONTENTS", "TAB", "COMMA", "PAR_OPEN", "PAR_CLOSE", "COLON", 
                  "WAVY", "HASH", "LB", "X", "ARITH", "PERIOD", "SPACE", 
                  "DELIM", "APOSTROPHE", "PHASE", "TO", "GAMEENDSWHEN", 
                  "APLAYERREACHES", "OR", "AND", "MOREORLESS", "INATURN", 
                  "RESOURCETOKENS", "COMMONDECKOF", "UNLIMITED", "DECKOF", 
                  "PLAYERSSTARTWIHT", "ACTIONNAME", "RESOURCEORCARDS", "LISTOFCARDS", 
                  "TARGET", "ANYALL", "NUMBER", "NAME", "ID" ]

    grammarFileName = "Tabl.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.10.1")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


